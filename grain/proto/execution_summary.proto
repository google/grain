syntax = "proto3";

package grain.python.execution_summary;

message ExecutionSummary {
  message Node {
    // Unique ID of the node.
    int32 id = 2;
    // Human-readable name of the node.
    string name = 3;
    // Node IDs of the parent nodes.
    repeated int32 inputs = 4;
    // Ratio of time spent by the pipeline waiting for the given transformation
    // node.
    double wait_time_ratio = 5;
    // Cummulative processing time spent in the node from the start in
    // nanoseconds.
    int64 total_processing_time_ns = 6;
    // Minimum per-element processing time in nanoseconds.
    int64 min_processing_time_ns = 7;
    // Maximum per-element processing time in nanoseconds.
    int64 max_processing_time_ns = 8;
    // Number of elements produced by the node.
    int64 num_produced_elements = 9;
    // Human-readable specification of the produced elements.
    string output_spec = 10;
    // Whether the node is the root node.
    bool is_output = 11;
    // Whether the node is prefetch node. Child nodes of prefetch will have
    // their wait time ratio derived from the ratio of the prefetch node.
    // Sum of all ratios in a single pipeline is 1.
    bool is_prefetch = 12;
  }
  // Map of node IDs to nodes in the pipeline.
  map<int32, Node> nodes = 1;
}
