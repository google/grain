# This workflow builds Grain wheels and uploads them as artifacts.

name: Build & Publish Template

on:
  workflow_call:
    inputs:
      pypi_project_url:
        required: true
        type: string
      run_tests_with_bazel:
        required: true
        type: boolean
      is_nightly:
        required: true
        type: boolean

defaults:
  run:
    shell: bash

permissions:
  contents: read

jobs:
  build-and-test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-14, windows-2022]

    env:
      USE_BAZEL_VERSION: "7.2.1"
    steps:
      - name: Set up Bazel
        uses: bazel-contrib/setup-bazel@0.15.0
      - name: Check Bazel installation
        run: |
          which bazel
          bazel version
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install rsync for Windows
        if: runner.os == 'Windows'
        run: choco install --no-progress rsync
      - uses: "actions/checkout@v3"
      - name: Create directory and set TEMP_DIR
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          mkdir -p /tmp/grain
          cp -r . /tmp/grain
          echo "TEMP_DIR=/tmp/grain" >> $GITHUB_ENV
          echo "WHL_DIR=/tmp/grain" >> $GITHUB_ENV
      - name: Set TEMP_DIR
        if: runner.os == 'Windows'
        run: |
          echo "TEMP_DIR=${PWD}" >> $GITHUB_ENV
          echo "WHL_DIR=." >> $GITHUB_ENV
      - name: Build package
        run: |
          set -xe
          export PYTHON_VERSION=${{ matrix.python-version }}
          export PYTHON_MAJOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f1)
          export PYTHON_MINOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f2)
          export BAZEL_VERSION="${USE_BAZEL_VERSION}"
          export OUTPUT_DIR="${TEMP_DIR}"
          export SOURCE_DIR="${TEMP_DIR}"
          export RUN_TESTS_WITH_BAZEL=${{ inputs.run_tests_with_bazel }}
          export IS_NIGHTLY=${{ inputs.is_nightly }}
          . "${SOURCE_DIR}"'/grain/oss/runner_common.sh'
          build_and_test_grain
      - name: Upload Grain artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-grain-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: "${{ env.WHL_DIR }}/all_dist/*.whl"

  publish-wheel:
    runs-on: ubuntu-22.04
    needs: build-and-test
    permissions:
      id-token: write
    environment:
      name: pypi
      url: ${{ inputs.pypi_project_url }}
    steps:
      - name: Download Grain artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: built-grain-wheels-*
          path: dist/
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: false
          verbose: true