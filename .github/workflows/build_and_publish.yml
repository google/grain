# This workflow builds Grain wheels and uploads them as artifacts.

name: Build & Publish

on:
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run unit tests'
        required: false
        default: true
        type: boolean

permissions:
  contents: read

jobs:
  build-and-test:
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
    runs-on: "${{ matrix.os }}"

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: [ubuntu-22.04, ubuntu-22.04-arm, macos-14]

    steps:
      - uses: "actions/checkout@v3"
      - name: Create directory
        run: |
          mkdir -p /tmp/grain
          cp -r . /tmp/grain
      - name: Build package
        run: |
          set -xe
          export PYTHON_VERSION=${{ matrix.python-version }}
          export PYTHON_MAJOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f1)
          export PYTHON_MINOR_VERSION=$(echo $PYTHON_VERSION | cut -d. -f2)
          export BAZEL_VERSION="7.1.1"
          export OUTPUT_DIR="/tmp/grain"
          export SOURCE_DIR="/tmp/grain"
          export RUN_TESTS=${{ inputs.run_tests }}
          . "${SOURCE_DIR}"'/grain/oss/runner_common.sh'
          build_and_test_grain
      - name: Remove unaudited wheels
        if: runner.os == 'Linux'
        run: find /tmp/grain/all_dist/ -maxdepth 1 -type f | grep -v "manylinux" | xargs rm -v
      - name: Upload Grain artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-grain-wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: /tmp/grain/all_dist/*.whl

  publish-wheel:
    runs-on: ubuntu-22.04
    needs: build-and-test
    permissions:
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/grain
    steps:
      - name: Download Grain artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: built-grain-wheels-*
          path: dist/
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
